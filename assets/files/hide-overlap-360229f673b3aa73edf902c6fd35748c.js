function startCalc(t){const e=calculateArea(t),n=getParents(t);!function o(i){for(let c of i.children){if(1!==c.nodeType)continue;const i=c.tagName.toLowerCase();if(!["script","style","svg","canvas","video","videos"].includes(i))if(c!==t){if(c.getBoundingClientRect){const t=calculateArea(c);if(elementInterectArea(e,t))if(n.includes(c))console.log("is parent element: ",c);else try{c.parentElement.removeChild(c)}catch(l){}}c.children&&o(c)}else console.log("match myself")}}(document.body)}function getParents(t){const e=[];return function t(n){n.parentElement&&(e.push(n.parentElement),t(n.parentElement))}(t),e}function elementInterectArea(t,e){const n=t.right-t.left,o=t.bottom-t.top,i=e.right-e.left,l=e.bottom-e.top,c=n+i-(Math.max(t.right,e.right)-Math.min(t.left,e.left)),r=o+l-(Math.max(t.bottom,e.bottom)-Math.min(t.top,e.top));return c<=0||r<=0?0:c*r}function calculateArea(t){const{height:e,width:n,x:o,y:i,left:l,right:c,top:r,bottom:a}=t.getBoundingClientRect();return 0===e||0===n?{left:void 0,right:void 0,top:void 0,bottom:void 0}:{left:l,top:r,bottom:a,right:c}}