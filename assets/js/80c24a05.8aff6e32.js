"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[78242],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return t?a.createElement(f,s(s({ref:n},p),{},{components:t})):a.createElement(f,s({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},14504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={tags:["javascript","typescript","react","java","next.js","zx","shell"]},s="\u4ee3\u7801\u7247\u6bb5",i={unversionedId:"collections/code-snippets",id:"collections/code-snippets",title:"\u4ee3\u7801\u7247\u6bb5",description:"JavaScript / TypeScript",source:"@site/src/docs/built-in/collections/code-snippets.md",sourceDirName:"collections",slug:"/collections/code-snippets",permalink:"/docs/built-in/collections/code-snippets",draft:!1,editUrl:"https://github.com/alanwei43/blog/tree/master/src/docs/built-in/collections/code-snippets.md",tags:[{label:"javascript",permalink:"/docs/built-in/tags/javascript"},{label:"typescript",permalink:"/docs/built-in/tags/typescript"},{label:"react",permalink:"/docs/built-in/tags/react"},{label:"java",permalink:"/docs/built-in/tags/java"},{label:"next.js",permalink:"/docs/built-in/tags/next-js"},{label:"zx",permalink:"/docs/built-in/tags/zx"},{label:"shell",permalink:"/docs/built-in/tags/shell"}],version:"current",frontMatter:{tags:["javascript","typescript","react","java","next.js","zx","shell"]},sidebar:"tutorialSidebar",previous:{title:"\u4e66\u7b7e",permalink:"/docs/built-in/collections/bookmarks"},next:{title:"Docker",permalink:"/docs/built-in/collections/docker"}},l={},c=[{value:"JavaScript / TypeScript",id:"javascript--typescript",level:2},{value:"\u5728 ShadowDOM \u4e2d\u6e32\u67d3 React \u5e94\u7528",id:"\u5728-shadowdom-\u4e2d\u6e32\u67d3-react-\u5e94\u7528",level:3},{value:"\u83b7\u53d6\u51fd\u6570\u8fd4\u56de\u7c7b\u578b",id:"\u83b7\u53d6\u51fd\u6570\u8fd4\u56de\u7c7b\u578b",level:3},{value:"base64 \u5904\u7406",id:"base64-\u5904\u7406",level:3},{value:"React \u8868\u5355\u5feb\u6377\u66f4\u65b0",id:"react-\u8868\u5355\u5feb\u6377\u66f4\u65b0",level:3},{value:"\u89e3\u6790 HTML/XML",id:"\u89e3\u6790-htmlxml",level:3},{value:"HumanSize/HumanTimer",id:"humansizehumantimer",level:3},{value:"Next.js Upload File",id:"nextjs-upload-file",level:3},{value:"TypeScript \u5224\u7a7a",id:"typescript-\u5224\u7a7a",level:3},{value:"OS Scripts",id:"os-scripts",level:2},{value:"\u89e3\u6790 CLI \u811a\u672c\u7684\u53c2\u6570",id:"\u89e3\u6790-cli-\u811a\u672c\u7684\u53c2\u6570",level:3},{value:"\u663e\u793a\u6240\u6709\u5b50\u76ee\u5f55\u7684git\u4fe1\u606f",id:"\u663e\u793a\u6240\u6709\u5b50\u76ee\u5f55\u7684git\u4fe1\u606f",level:3},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:4}],p={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u4ee3\u7801\u7247\u6bb5"},"\u4ee3\u7801\u7247\u6bb5"),(0,r.kt)("h2",{id:"javascript--typescript"},"JavaScript / TypeScript"),(0,r.kt)("h3",{id:"\u5728-shadowdom-\u4e2d\u6e32\u67d3-react-\u5e94\u7528"},"\u5728 ShadowDOM \u4e2d\u6e32\u67d3 React \u5e94\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="renderInShadowDOM.tsx"',title:'"renderInShadowDOM.tsx"'},'import React from "react";\nimport ReactDOM from "react-dom/client";\nimport {StyleSheetManager} from "styled-components";\n\nexport function renderInShadowDOM(app: React.ReactNode, options: {\n  container: HTMLElement,\n  links?: Array<string>,\n  styles?: Array<string>\n}) {\n  const container = document.createElement("div");\n  options.container.appendChild(container);\n\n  const shadow = container.attachShadow({mode: "open"});\n\n  const styleSlot = document.createElement("section");\n  shadow.appendChild(styleSlot);\n\n  const root = document.createElement("div");\n  shadow.appendChild(root);\n\n  (options.links || []).map(createCssLink).forEach(ele => shadow.appendChild(ele));\n  (options.styles || []).map(createCssStyle).forEach(ele => shadow.appendChild(ele));\n\n  ReactDOM.createRoot(root).render(<StyleSheetManager target={styleSlot}> {app} </StyleSheetManager>);\n}\n\nfunction createCssLink(style: string) {\n  const link = document.createElement("link");\n  link.rel = "stylesheet";\n  link.href = style;\n  return link;\n}\n\nfunction createCssStyle(style: string) {\n  const link = document.createElement("style");\n  link.type = "text/css";\n  link.textContent = style;\n  return link;\n}\n')),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u4f7f\u7528\u793a\u4f8b:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import style from "./style.css?inline";\nimport App from "./App";\nimport { renderInShadowDOM } from "./renderInShadowDOM";\n\nrenderInShadowDOM(<App />, {\n  container: container || document.body,\n  styles: [style.toString()]\n});\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="style.css"',title:'"style.css"'},"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u53c2\u8003\u6587\u6863: ",(0,r.kt)("a",{parentName:"p",href:"https://www.wpeform.io/blog/render-react-app-shadow-dom-styled-components/"},"How to render react applications in Shadow DOM with SSR and Style Encapsulation"),", ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tailwindlabs/tailwindcss/discussions/1935#discussioncomment-396654"},"How to use Tailwind with shadow dom? #1935"))),(0,r.kt)("h3",{id:"\u83b7\u53d6\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"},"\u83b7\u53d6\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"',title:'"\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"'},'export async function myFunction() {\n  return Promise.resolve([{hello: "world"}]);\n}\n\nexport type MyFunctionResultType = ReturnType<typeof myFunction> extends Promise<Array<infer T>> ? T : never; // => {hello: string}\n')),(0,r.kt)("h3",{id:"base64-\u5904\u7406"},"base64 \u5904\u7406"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="\u6d4f\u89c8\u5668"',title:'"\u6d4f\u89c8\u5668"'},'/**\n * \u7f16\u7801\u6210base64\u5b57\u7b26\u4e32\n * \u53c2\u8003\u6587\u6863 [Base64](https://developer.mozilla.org/en-US/docs/Glossary/Base64)\n * @author wmm\n * @date 2024-02-19\n */\nexport function encodeToBase64(str: string): string {\n  return window.btoa(String.fromCodePoint(...new TextEncoder().encode(str)));\n}\n\n/**\n * \u5c06base64\u89e3\u7801\n * \u53c2\u8003\u6587\u6863 [Base64](https://developer.mozilla.org/en-US/docs/Glossary/Base64)\n * @author wmm\n * @date 2024-02-19\n */\nexport function decodeFromBase64(base64: string): string {\n  const binString = window.atob(base64);\n  // @ts-ignore\n  const data = window.Uint8Array.from(binString, m => m.codePointAt(0));\n  return new TextDecoder().decode(data);\n}\n\n/**\n * \u7528\u4e8e\u5c06\u8bfb\u53d6\u6210base64\n */ \nexport function readAsBase64(data: Blob): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(data);\n    reader.onload = () => resolve((reader.result as string).split(";base64,")[1]);\n    reader.onerror = err => reject(err);\n  });\n}\n')),(0,r.kt)("h3",{id:"react-\u8868\u5355\u5feb\u6377\u66f4\u65b0"},"React \u8868\u5355\u5feb\u6377\u66f4\u65b0"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"export type OnChangeUpdate<T> = {\n  <K extends keyof T>(key: K, value: T[K]): void;\n};\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'showLineNumbers title="\u8868\u5355\u793a\u4f8b"',showLineNumbers:!0,title:'"\u8868\u5355\u793a\u4f8b"'},'function render() {\n  const [form, setForm] = useState({\n    firstName: "",\n    lastName: "",\n    age: 0\n  });\n\n  const update: OnChangeUpdate<typeof form> = (key, value) => {\n    setForm({...form, [key]: value});\n  };\n\n  return (\n    <input\n      type="text"\n      value={form.firstName}\n      onChange={e => update("firstName", e.target.value)}\n    />\n  );\n}\n\nexport type OnChangeUpdate<T> = {\n  <K extends keyof T>(key: K, value: T[K]): void;\n};\n')),(0,r.kt)("h3",{id:"\u89e3\u6790-htmlxml"},"\u89e3\u6790 HTML/XML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="\u6d4f\u89c8\u5668\u7aef\u6267\u884c"',title:'"\u6d4f\u89c8\u5668\u7aef\u6267\u884c"'},'export async function parseHtml(url: string, mimeType?: DOMParserSupportedType): Promise<Document> {\n  const req = await fetch(url);\n  const text = await response.text();\n  return new DOMParser().parseFromString(text, mimeType || "text/html");\n}\n')),(0,r.kt)("h3",{id:"humansizehumantimer"},"HumanSize/HumanTimer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="\u53ef\u8bfb\u7684Size\u5b57\u7b26\u4e32"',title:'"\u53ef\u8bfb\u7684Size\u5b57\u7b26\u4e32"'},'function humanSize(bytes: number, decimals = 2) {\n  if (bytes === 0) return "0 Bytes";\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + " " + sizes[i];\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="\u5c06\u5269\u4f59\u6beb\u79d2\u6570\u8f6c\u6210\u53ef\u8bfb\u7684\u65f6\u5206\u79d2\u683c\u5f0f"',title:'"\u5c06\u5269\u4f59\u6beb\u79d2\u6570\u8f6c\u6210\u53ef\u8bfb\u7684\u65f6\u5206\u79d2\u683c\u5f0f"'},'function humanMs(ms: number) {\n  let milliseconds = Math.abs(ms);\n\n  const oneSecond = 1000;\n  const oneMinute = oneSecond * 60;\n  const oneHour = oneMinute * 60;\n\n  const hours = Math.floor(milliseconds / oneHour);\n  milliseconds -= hours * oneHour;\n  const minutes = Math.floor(milliseconds / oneMinute);\n  milliseconds -= minutes * oneMinute;\n  const seconds = Math.floor(milliseconds / oneSecond);\n  milliseconds -= seconds * oneSecond;\n  const leftMs = milliseconds.toFixed(0);\n\n  const value = [hours, minutes, seconds].map(val => val.toString().padStart(2, "0")).join(":");\n\n  return `${value}.${leftMs.padStart(3, "0")}`;\n}\n')),(0,r.kt)("h3",{id:"nextjs-upload-file"},"Next.js Upload File"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"ref ",(0,r.kt)("a",{parentName:"p",href:"https://ethanmick.com/how-to-upload-a-file-in-next-js-13-app-directory/"},"How to upload a file in Next.js 13+ App Directory with No libraries"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { writeFile } from 'fs/promises'\nimport { NextRequest, NextResponse } from 'next/server'\nimport { join } from 'path'\n\nexport async function POST(request: NextRequest) {\n  const data = await request.formData()\n  const file: File | null = data.get('file') as unknown as File\n\n  if (!file) {\n    return NextResponse.json({ success: false })\n  }\n\n  const bytes = await file.arrayBuffer()\n  const buffer = Buffer.from(bytes)\n\n  // With the file data in the buffer, you can do whatever you want with it.\n  // For this, we'll just write it to the filesystem in a new location\n  const path = join('/', 'tmp', file.name)\n  await writeFile(path, buffer)\n  console.log(`open ${path} to see the uploaded file`)\n\n  return NextResponse.json({ success: true })\n}\n")),(0,r.kt)("h3",{id:"typescript-\u5224\u7a7a"},"TypeScript \u5224\u7a7a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'/**\n * \u5224\u65ad\u5165\u53c2\u662f\u5426\u662f\u4ee5\u4e0b\u503c\n * * `null`\n * * `undefined`\n * * `NaN`\n * @author wmm\n * @date 2025-01-04\n */\nexport function isEmptyValue(value: unknown): value is null | undefined {\n  if (typeof value === "number" && isNaN(value)) {\n    return true;\n  }\n  return value === null || value === undefined;\n}\n\n')),(0,r.kt)("h2",{id:"os-scripts"},"OS Scripts"),(0,r.kt)("h3",{id:"\u89e3\u6790-cli-\u811a\u672c\u7684\u53c2\u6570"},"\u89e3\u6790 CLI \u811a\u672c\u7684\u53c2\u6570"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'function getCliParameterValue(paraName) {\n  const args = process.argv;\n  const paraIndex = args.indexOf(`--${paraName}`);\n  const paraNameAndValue = paraIndex > -1 && args.splice(paraIndex, 2);\n  if (paraNameAndValue) {\n    return paraNameAndValue.length === 2 ? paraNameAndValue[1] : "";\n  }\n  return null;\n}\n')),(0,r.kt)("h3",{id:"\u663e\u793a\u6240\u6709\u5b50\u76ee\u5f55\u7684git\u4fe1\u606f"},"\u663e\u793a\u6240\u6709\u5b50\u76ee\u5f55\u7684git\u4fe1\u606f"),(0,r.kt)("p",null,"\u4f9d\u8d56 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/google/zx"},"zx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'#!/usr/bin/env zx\n\nimport { readdirSync, statSync, existsSync } from "node:fs";\nimport { join } from "node:path";\n\nconst [, , , filter] = process.argv;\nconst root = getCliParameterValue("-d") || process.cwd();\nconsole.log(`Directory: ${root}`);\n\nconst projects = readdirSync(root)\n  .filter(name => {\n    if (filter) return name.includes(filter);\n    return true;\n  })\n  .map(name => ({\n    fullPath: join(root, name),\n    name: name\n  }))\n  .map(({ fullPath, name }) => {\n    return {\n      name: name,\n      dir: fullPath,\n      stat: statSync(fullPath)\n    }\n  })\n  .filter(item => item.stat.isDirectory())\n  .filter(item => existsSync(join(item.dir, ".git")))\n  .map(async item => {\n    const result = {\n      ...item,\n      log: "pending...",\n      branch: "pending...",\n    }\n    try {\n      result.log = (await $`cd ${item.dir} && git log --oneline -n 1`).toString().trim();\n      result.branch = (await $`cd ${item.dir} && git branch --show-current`).toString().trim();\n    } catch (ex) {\n      result.log = result.branch = "--";\n    }\n    return result;\n  });\n\nPromise.all(projects)\n  .then((projects) => {\n    const nameMaxPad = maxLength(projects.map(p => p.name));\n    const branchMaxPad = maxLength(projects.map(p => p.branch))\n    const outputs = projects.map(proj => `${proj.name.padEnd(nameMaxPad)} ${proj.branch.padEnd(branchMaxPad)} ${proj.log}`).join("\\n");\n    console.log(outputs);\n  });\n\nfunction maxLength(list) { return list.reduce((prev, next) => Math.max(prev, next.length), 0) + 1; }\n\nfunction getCliParameterValue(paraName) {\n  const args = process.argv;\n  const paraIndex = args.indexOf(paraName);\n  const paraNameAndValue = paraIndex > -1 && args.splice(paraIndex, 2);\n  if (paraNameAndValue) {\n    return paraNameAndValue.length === 2 ? paraNameAndValue[1] : "";\n  }\n  return null;\n}\n')),(0,r.kt)("h4",{id:"\u4f7f\u7528"},"\u4f7f\u7528"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# \u663e\u793a\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u6240\u6709\u5b50\u76ee\u5f55\u540d\u5305\u542b fe \u7684\u9879\u76eegit\u4fe1\u606f\ngit-info.mjs fe\n\n# \u663e\u793a\u7236\u7ea7\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u5305\u542b fe \u9879\u76ee\u7684git\u4fe1\u606f\ngit-info.mjs fe -d ../\n")))}u.isMDXComponent=!0}}]);