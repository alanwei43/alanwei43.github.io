"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[63238],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),c=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(r),h=a,g=u["".concat(d,".").concat(h)]||u[h]||p[h]||o;return r?n.createElement(g,s(s({ref:t},l),{},{components:r})):n.createElement(g,s({ref:t},l))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var c=2;c<o;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},55342:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const o={id:"13-sending-data-worker-threads",title:"Sending data between Worker Threads",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Sending data between Worker Threads",keywords:["typescript","node.js"],tags:["typescript","node.js"],slug:"./13-sending-data-worker-threads",toc_max_heading_level:6,sidebar_position:2.5},s=void 0,i={unversionedId:"articles/nodejs-typescript/13-sending-data-worker-threads",id:"articles/nodejs-typescript/13-sending-data-worker-threads",title:"Sending data between Worker Threads",description:"\u672c\u6587\u8f6c\u8f7d\u81ea Node.js TypeScript",source:"@site/src/docs/articles/nodejs-typescript/13-sending-data-worker-threads.md",sourceDirName:"articles/nodejs-typescript",slug:"/articles/nodejs-typescript/13-sending-data-worker-threads",permalink:"/docs/articles/nodejs-typescript/13-sending-data-worker-threads",draft:!1,editUrl:"https://github.com/alanwei43/blog/tree/master/src/docs/articles/nodejs-typescript/13-sending-data-worker-threads.md",tags:[{label:"typescript",permalink:"/docs/tags/typescript"},{label:"node.js",permalink:"/docs/tags/node-js"}],version:"current",sidebarPosition:2.5,frontMatter:{id:"13-sending-data-worker-threads",title:"Sending data between Worker Threads",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Sending data between Worker Threads",keywords:["typescript","node.js"],tags:["typescript","node.js"],slug:"./13-sending-data-worker-threads",toc_max_heading_level:6,sidebar_position:2.5},sidebar:"tutorialSidebar",previous:{title:"Introduction to Worker Threads with TypeScript",permalink:"/docs/articles/nodejs-typescript/12-worker-threads"},next:{title:"Collections",permalink:"/docs/collections/"}},d={},c=[{value:"Communicating using the MessageChannel",id:"communicating-using-the-messagechannel",level:2}],l={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u672c\u6587\u8f6c\u8f7d\u81ea ",(0,a.kt)("a",{parentName:"p",href:"https://wanago.io/2019/05/13/node-js-typescript-13-sending-data-worker-threads/"},"Node.js TypeScript"))),(0,a.kt)("p",null,"The Worker Threads give us quite exciting features when compared to, for example, child processes. In this article, we create our instances of the MessageChannel to communicate with the Worker Threads. Aside from that, we also share the data between them: it\u2019s something that is not possible with child processes."),(0,a.kt)("h2",{id:"communicating-using-the-messagechannel"},"Communicating using the MessageChannel"),(0,a.kt)("p",null,"There are a few ways to communicate with Node.js Worker Threads. In the previous part of this series, aside from passing the data through  ",(0,a.kt)("inlineCode",{parentName:"p"},"workerData"),", we\u2019ve used the  ",(0,a.kt)("inlineCode",{parentName:"p"},"parentPort")," to send the data from the worker thread to the parent."))}p.isMDXComponent=!0}}]);