"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[55457],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var s=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,s,r=function(e,n){if(null==e)return{};var t,s,r={},i=Object.keys(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)t=i[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=s.createContext({}),l=function(e){var n=s.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=l(e.components);return s.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},d=s.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return t?s.createElement(g,o(o({ref:n},u),{},{components:t})):s.createElement(g,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,o[1]=a;for(var l=2;l<i;l++)o[l]=t[l];return s.createElement.apply(null,o)}return s.createElement.apply(null,t)}d.displayName="MDXCreateElement"},66542:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=t(87462),r=(t(67294),t(3905));const i={tags:["tailwindcss","docusaurus"]},o="\u5728 Docusaurus \u91cc\u4f7f\u7528 TailwindCSS",a={permalink:"/blog/2024/12/15/docusaurus-use-tailwindcss",editUrl:"https://github.com/alanwei43/blog/tree/master/src/blog/2024/12-15-docusaurus-use-tailwindcss.md",source:"@site/src/blog/2024/12-15-docusaurus-use-tailwindcss.md",title:"\u5728 Docusaurus \u91cc\u4f7f\u7528 TailwindCSS",description:"ref Using TailwindCSS v3 in Docusaurus in 5 steps",date:"2024-12-15T00:00:00.000Z",formattedDate:"December 15, 2024",tags:[{label:"tailwindcss",permalink:"/blog/tags/tailwindcss"},{label:"docusaurus",permalink:"/blog/tags/docusaurus"}],readingTime:2.66,hasTruncateMarker:!0,authors:[],frontMatter:{tags:["tailwindcss","docusaurus"]},prevItem:{title:"\u9875\u9762\u6574\u4f53\u989c\u8272\u5207\u6362",permalink:"/blog/2025/02/27/html-css-filter"},nextItem:{title:"CSS Position Sticky",permalink:"/blog/2024/12/14/css-position-sticky"}},c={authorsImageUrls:[]},l=[{value:"\u521b\u5efa Docusaurus \u9879\u76ee",id:"\u521b\u5efa-docusaurus-\u9879\u76ee",level:2},{value:"\u5b89\u88c5 TailwindCSS \u4f9d\u8d56",id:"\u5b89\u88c5-tailwindcss-\u4f9d\u8d56",level:2},{value:"\u8bbe\u7f6e\u63d2\u4ef6",id:"\u8bbe\u7f6e\u63d2\u4ef6",level:2},{value:"\u52a0\u8f7d TailwindCSS",id:"\u52a0\u8f7d-tailwindcss",level:2}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,s.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://dev.to/shannonajclarke/using-tailwindcss-v3-in-docusaurus-in-5-steps-5c26"},"ref Using TailwindCSS v3 in Docusaurus in 5 steps")),(0,r.kt)("h2",{id:"\u521b\u5efa-docusaurus-\u9879\u76ee"},"\u521b\u5efa Docusaurus \u9879\u76ee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'echo "registry=https://registry.npmmirror.com" >> .npmrc\nnpm init -y\nnpm install -D create-docusaurus\nnpx create-docusaurus@latest hello-world classic --typescript\ncd hello-world\n')),(0,r.kt)("h2",{id:"\u5b89\u88c5-tailwindcss-\u4f9d\u8d56"},"\u5b89\u88c5 TailwindCSS \u4f9d\u8d56"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install tailwindcss postcss autoprefixer --save\nnpx tailwindcss init --ts # => \u4f1a\u751f\u6210\u4e00\u4e2a tailwind.config.ts \u6587\u4ef6\n")),(0,r.kt)("p",null,"\u7f16\u8f91 ",(0,r.kt)("inlineCode",{parentName:"p"},"tailwind.config.ts"),": "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import type { Config } from 'tailwindcss'\n\nexport default {\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n} satisfies Config\n\n\n")),(0,r.kt)("h2",{id:"\u8bbe\u7f6e\u63d2\u4ef6"},"\u8bbe\u7f6e\u63d2\u4ef6"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"docusaurus.config.ts")," \u6587\u4ef6\u627e\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"plugin")," \u914d\u7f6e\u9879,\u65b0\u589e\u4e00\u4e0b\u914d\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="docusaurus.config.ts"',title:'"docusaurus.config.ts"'},'import { themes as prismThemes } from \'prism-react-renderer\';\nimport type { Config } from \'@docusaurus/types\';\nimport type * as Preset from \'@docusaurus/preset-classic\';\n\n// This runs in Node.js - Don\'t use client-side code here (browser APIs, JSX...)\n\nconst editUrl = "edit url address";\n\nconst config: Config = {\n  // ... \u5176\u4ed6\u914d\u7f6e\n  plugins: [\n    // tailwindcss \u63d2\u4ef6\n    async function myPlugin(context, options) {\n      return {\n        name: "docusaurus-tailwindcss",\n        configurePostCss(postcssOptions) {\n          // Appends TailwindCSS and AutoPrefixer.\n          postcssOptions.plugins.push(require("tailwindcss"));\n          postcssOptions.plugins.push(require("autoprefixer"));\n          return postcssOptions;\n        },\n      };\n    },\n  ],\n};\n\nexport default config;\n')),(0,r.kt)("p",null,"\u76f8\u5bf9\u5b8c\u6574\u7684\u914d\u7f6e\u5982\u4e0b:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="docusaurus.config.ts"',title:'"docusaurus.config.ts"'},"import { themes as prismThemes } from 'prism-react-renderer';\nimport type { Config } from '@docusaurus/types';\nimport type * as Preset from '@docusaurus/preset-classic';\n\n// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)\n\nconst editUrl = \"edit url address\";\n\nconst config: Config = {\n  title: '...',\n  tagline: '...',\n  url: '...',\n  onBrokenLinks: 'throw',\n  onBrokenMarkdownLinks: 'warn',\n  favicon: 'img/favicon.ico',\n  \n  // ... \u5176\u4ed6\u914d\u7f6e\n  presets: [\n    [\n      'classic',\n      {\n        docs: {\n          sidebarPath: './sidebars.ts',\n          // Please change this to your repo.\n          // Remove this to remove the \"edit this page\" links.\n          editUrl: editUrl,\n          showLastUpdateTime: true,\n          sidebarCollapsible: true\n        },\n        blog: {\n          showReadingTime: true,\n          feedOptions: {\n            type: ['rss', 'atom'],\n            xslt: true,\n          },\n          // Please change this to your repo.\n          // Remove this to remove the \"edit this page\" links.\n          editUrl: editUrl,\n          // Useful options to enforce blogging best practices\n          onInlineTags: \"ignore\", // 'ignore' | 'log' | 'warn' | 'throw'\n          onInlineAuthors: 'warn',\n          onUntruncatedBlogPosts: 'warn',\n\n          truncateMarker: /\x3c!--\\s*(truncate|splitor)\\s*--\x3e/,\n          blogSidebarCount: 20\n        },\n        theme: {\n          customCss: './src/css/custom.css',\n        },\n      } satisfies Preset.Options,\n    ],\n  ],\n\n  plugins: [\n    //  \u591a\u6587\u6863\u914d\u7f6e\n    ['@docusaurus/plugin-content-docs', {\n      id: 'front-end',\n      path: 'docs/front-end',\n      routeBasePath: 'wiki/front-end',\n      sidebarPath: require.resolve('./docs/sidebars.FrondEnd.js'),\n      editUrl: editUrl,\n      showLastUpdateTime: true,\n      sidebarCollapsible: true\n    }],\n    ['@docusaurus/plugin-content-docs', {\n      id: 'back-end',\n      path: 'docs/back-end',\n      routeBasePath: 'wiki/back-end',\n      sidebarPath: require.resolve('./docs/sidebars.BackEnd.js'),\n      editUrl: editUrl,\n      showLastUpdateTime: true,\n      sidebarCollapsible: true\n    }],\n    // tailwindcss \u63d2\u4ef6\n    async function myPlugin(context, options) {\n      return {\n        name: \"docusaurus-tailwindcss\",\n        configurePostCss(postcssOptions) {\n          // Appends TailwindCSS and AutoPrefixer.\n          postcssOptions.plugins.push(require(\"tailwindcss\"));\n          postcssOptions.plugins.push(require(\"autoprefixer\"));\n          return postcssOptions;\n        },\n      };\n    },\n  ],\n  themes: [\n  // \u641c\u7d22\n    [\n      require.resolve(\"@easyops-cn/docusaurus-search-local\"),\n      /** @type {import(\"@easyops-cn/docusaurus-search-local\").PluginOptions} */\n      ({\n         // `hashed` is recommended as long-term-cache of index file is possible.\n         hashed: true,\n         // For Docs using Chinese, The `language` is recommended to set to:\n         language: [\"en\", \"zh\"],\n         indexPages: true,\n         // docsRouteBasePath: [\"/docs\", \"\"],\n         docsDir: [\"docs\"]\n      }),\n    ],\n  ],\n};\n\nexport default config;\n")),(0,r.kt)("h2",{id:"\u52a0\u8f7d-tailwindcss"},"\u52a0\u8f7d TailwindCSS"),(0,r.kt)("p",null,"\u4fee\u6539\u6587\u4ef6 ",(0,r.kt)("inlineCode",{parentName:"p"},"src/css/custom.css"),", \u5728\u6587\u4ef6\u9876\u90e8\u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="src/css/custom.css"',title:'"src/css/custom.css"'},"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n")))}p.isMDXComponent=!0}}]);