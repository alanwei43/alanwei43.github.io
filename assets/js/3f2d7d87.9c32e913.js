"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[76772],{12857:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var i=n(79767),o=n(74848),a=n(28453);const s={title:"Dart Visual Studio Code \u63a8\u8350\u8bbe\u7f6e",author:"Alan",author_title:"Maintainer of blog",author_url:"https://github.com/alanwei43",author_image_url:"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4",tags:["dart","vsc","visual studio code"],draft:!1,hide_table_of_contents:!1},r=void 0,l={authorsImageUrls:[void 0]},u=[];function d(t){const e={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"https://dartcode.org/docs/recommended-settings/",children:"Dart Visual Studio Code \u63a8\u8350\u8bbe\u7f6e"})}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n\t// Causes the debug view to automatically appear when a breakpoint is hit. This\n\t// setting is global and not configurable per-language.\n\t"debug.openDebug": "openOnDebugBreak",\n\n\t"[dart]": {\n\t\t// Automatically format code on save and during typing of certain characters\n\t\t// (like `;` and `}`).\n\t\t"editor.formatOnSave": true,\n\t\t"editor.formatOnType": true,\n\n\t\t// Draw a guide line at 80 characters, where Dart\'s formatting will wrap code.\n\t\t"editor.rulers": [80],\n\n\t\t// Disables built-in highlighting of words that match your selection. Without\n\t\t// this, all instances of the selected text will be highlighted, interfering\n\t\t// with Dart\'s ability to highlight only exact references to the selected variable.\n\t\t"editor.selectionHighlight": false,\n\n\t\t// By default, VS Code prevents code completion from popping open when in\n\t\t// "snippet mode" (editing placeholders in inserted code). Setting this option\n\t\t// to `false` stops that and allows completion to open as normal, as if you\n\t\t// weren\'t in a snippet placeholder.\n\t\t"editor.suggest.snippetsPreventQuickSuggestions": false,\n\n\t\t// By default, VS Code will pre-select the most recently used item from code\n\t\t// completion. This is usually not the most relevant item.\n\t\t//\n\t\t// "first" will always select top item\n\t\t// "recentlyUsedByPrefix" will filter the recently used items based on the\n\t\t//     text immediately preceding where completion was invoked.\n\t\t"editor.suggestSelection": "first",\n\n\t\t// Allows pressing <TAB> to complete snippets such as `for` even when the\n\t\t// completion list is not visible.\n\t\t"editor.tabCompletion": "onlySnippets",\n\n\t\t// By default, VS Code will populate code completion with words found in the\n\t\t// current file when a language service does not provide its own completions.\n\t\t// This results in code completion suggesting words when editing comments and\n\t\t// strings. This setting will prevent that.\n\t\t"editor.wordBasedSuggestions": false,\n\t}\n}\n'})})]})}function c(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>s,x:()=>r});var i=n(96540);const o={},a=i.createContext(o);function s(t){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),i.createElement(a.Provider,{value:e},t.children)}},79767:t=>{t.exports=JSON.parse('{"permalink":"/blog/2022/02/19/dart-visual-studio-code-settings","editUrl":"https://github.com/alanwei43/blog/tree/master/src/blog/2022/02/19-dart-visual-studio-code-settings.md","source":"@site/src/blog/2022/02/19-dart-visual-studio-code-settings.md","title":"Dart Visual Studio Code \u63a8\u8350\u8bbe\u7f6e","description":"Dart Visual Studio Code \u63a8\u8350\u8bbe\u7f6e","date":"2022-02-19T00:00:00.000Z","tags":[{"inline":true,"label":"dart","permalink":"/blog/tags/dart"},{"inline":true,"label":"vsc","permalink":"/blog/tags/vsc"},{"inline":true,"label":"visual studio code","permalink":"/blog/tags/visual-studio-code"}],"readingTime":1.425,"hasTruncateMarker":true,"authors":[{"name":"Alan","title":"Maintainer of blog","url":"https://github.com/alanwei43","imageURL":"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4","key":null,"page":null}],"frontMatter":{"title":"Dart Visual Studio Code \u63a8\u8350\u8bbe\u7f6e","author":"Alan","author_title":"Maintainer of blog","author_url":"https://github.com/alanwei43","author_image_url":"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4","tags":["dart","vsc","visual studio code"],"draft":false,"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"Flutter\u8fdc\u7a0b\u8c03\u8bd5Android\u8bbe\u5907","permalink":"/blog/2022/02/20/flutter-remote-debug-android-device"},"nextItem":{"title":"GitHub QA","permalink":"/blog/2022/02/18/github-qa"}}')}}]);