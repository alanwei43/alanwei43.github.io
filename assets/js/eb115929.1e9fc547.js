"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[45e3],{3905:(e,a,n)=>{n.d(a,{Zo:()=>s,kt:()=>u});var t=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function c(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),l=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},s=function(e){var a=l(e.components);return t.createElement(p.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,g=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return n?t.createElement(g,i(i({ref:a},s),{},{components:n})):t.createElement(g,i({ref:a},s))}));function u(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var p in a)hasOwnProperty.call(a,p)&&(c[p]=a[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},47682:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var t=n(87462),r=(n(67294),n(3905));const o={title:"\u4f7f\u7528Maven\u521b\u5efa\u4e00\u4e2aJava\u9879\u76ee",author:"Alan",author_title:"Maintainer of blog",author_url:"https://github.com/alanwei43",author_image_url:"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4",tags:["java","maven"],draft:!1,hide_table_of_contents:!1},i=void 0,c={permalink:"/blog/2021/03/06/create-java-project-use-maven",editUrl:"https://github.com/alanwei43/blog/tree/master/src/blog/2021-03-06-create-java-project-use-maven.md",source:"@site/src/blog/2021-03-06-create-java-project-use-maven.md",title:"\u4f7f\u7528Maven\u521b\u5efa\u4e00\u4e2aJava\u9879\u76ee",description:"\u539f\u6587",date:"2021-03-06T00:00:00.000Z",formattedDate:"March 6, 2021",tags:[{label:"java",permalink:"/blog/tags/java"},{label:"maven",permalink:"/blog/tags/maven"}],readingTime:4.575,hasTruncateMarker:!0,authors:[{name:"Alan",title:"Maintainer of blog",url:"https://github.com/alanwei43",imageURL:"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4"}],frontMatter:{title:"\u4f7f\u7528Maven\u521b\u5efa\u4e00\u4e2aJava\u9879\u76ee",author:"Alan",author_title:"Maintainer of blog",author_url:"https://github.com/alanwei43",author_image_url:"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4",tags:["java","maven"],draft:!1,hide_table_of_contents:!1},prevItem:{title:"\u4ece\u524d\u6162",permalink:"/blog/2021/03/07/cong-qian-man"},nextItem:{title:"\u5982\u4f55\u4f7f\u7528Maven\u521b\u5efa\u53ef\u6267\u884c\u7684JAR\u6587\u4ef6",permalink:"/blog/2021/03/06/how-can-i-create-an-executable-jar-with-dependencies-using-maven"}},p={authorsImageUrls:[void 0]},l=[{value:"1. Create a Project from Maven Template",id:"1-create-a-project-from-maven-template",level:2},{value:"2. Maven Directory Layout",id:"2-maven-directory-layout",level:2},{value:"3. POM file",id:"3-pom-file",level:2},{value:"4. Update POM",id:"4-update-pom",level:2},{value:"4.1 Add compiler properties to tell Maven use a specified JDK version to compile the source code.",id:"41-add-compiler-properties-to-tell-maven-use-a-specified-jdk-version-to-compile-the-source-code",level:3},{value:"4.2 Update jUnit to 4.12",id:"42-update-junit-to-412",level:3},{value:"4.3 Add commons-codec for SHA hashing.",id:"43-add-commons-codec-for-sha-hashing",level:3},{value:"4.4 Complete updated version.",id:"44-complete-updated-version",level:3},{value:"5. Write Code",id:"5-write-code",level:2},{value:"5.1 Update the App.java to accept an input and hash it with a SHA-256 algorithm.",id:"51-update-the-appjava-to-accept-an-input-and-hash-it-with-a-sha-256-algorithm",level:3},{value:"5.2 Unit Test.",id:"52-unit-test",level:3},{value:"6. Maven Build",id:"6-maven-build",level:2},{value:"6.1 Let build it with <code>mvn package</code>",id:"61-let-build-it-with-mvn-package",level:3},{value:"7. Run#1",id:"7-run1",level:2},{value:"7.1 Run it. Oops\u2026 By default, Maven didn\u2019t add the project dependencies <code>commons-codec</code> into the jar file.",id:"71-run-it-oops-by-default-maven-didnt-add-the-project-dependencies-commons-codec-into-the-jar-file",level:3},{value:"7.2 To solve it, we can use this <code>maven-shade-plugin</code> to create an uber/fat-jar \u2013 group everything into a single jar file.",id:"72-to-solve-it-we-can-use-this-maven-shade-plugin-to-create-an-uberfat-jar--group-everything-into-a-single-jar-file",level:3},{value:"7.3 Package it again!",id:"73-package-it-again",level:3},{value:"8. Run#2",id:"8-run2",level:2},{value:"8.1 Run it again. Good, the result is expected.",id:"81-run-it-again-good-the-result-is-expected",level:3},{value:"8.2 Can we run it as Jar? No, there is no main class.",id:"82-can-we-run-it-as-jar-no-there-is-no-main-class",level:3},{value:"8.3 To solve it, add the main class in maven-shade-plugin like this.",id:"83-to-solve-it-add-the-main-class-in-maven-shade-plugin-like-this",level:3},{value:"9. Run#3",id:"9-run3",level:2},{value:"9.1 Package it again!",id:"91-package-it-again",level:3},{value:"9.2 Run it as Jar.",id:"92-run-it-as-jar",level:3},{value:"10. POM",id:"10-pom",level:2}],s={toc:l};function d(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},s,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://mkyong.com/maven/how-to-create-a-java-project-with-maven/"},"\u539f\u6587")),(0,r.kt)("h2",{id:"1-create-a-project-from-maven-template"},"1. Create a Project from Maven Template"),(0,r.kt)("p",null,"In a terminal (*uix or Mac) or command prompt (Windows), navigate to the folder you want to create the Java project. Type this command :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mvn archetype:generate \n    -DgroupId={project-packaging}\n    -DartifactId={project-name}\n    -DarchetypeArtifactId={maven-template} \n    -DinteractiveMode=false\n")),(0,r.kt)("p",null,"This tells Maven to generate a Java project from a Maven template. For example,"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\>mvn archetype:generate -DgroupId=com.mkyong.hashing -DartifactId=java-project -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false\n\n...\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 3.992 s\n[INFO] Finished at: 2018-09-27T17:15:57+08:00\n[INFO] ------------------------------------------------------------------------\n")),(0,r.kt)("p",null,"Above command will generate a Java project from maven-archetype-quickstart template."),(0,r.kt)("h2",{id:"2-maven-directory-layout"},"2. Maven Directory Layout"),(0,r.kt)("p",null,"The following project directory structure will be created. In short, source code puts in folder /src/main/java/, unit test code puts in ",(0,r.kt)("inlineCode",{parentName:"p"},"/src/test/java/"),"."),(0,r.kt)("h2",{id:"3-pom-file"},"3. POM file"),(0,r.kt)("p",null,"Review the generated ",(0,r.kt)("inlineCode",{parentName:"p"},"pom.xml"),". It\u2019s quite empty, just a single ",(0,r.kt)("inlineCode",{parentName:"p"},"jUnit")," dependency."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"pom.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<project xmlns="http://maven.apache.org/POM/4.0.0" \n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 \n         http://maven.apache.org/maven-v4_0_0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.mkyong.hashing</groupId>\n    <artifactId>java-project3</artifactId>\n    <packaging>jar</packaging>\n    <version>1.0-SNAPSHOT</version>\n    <name>java-project</name>\n    <url>http://maven.apache.org</url>\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>3.8.1</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n</project>\n')),(0,r.kt)("p",null,"This POM file is like the Ant ",(0,r.kt)("inlineCode",{parentName:"p"},"build.xml")," file, it describes the entire project information, everything from directory structure, project plugins, project dependencies, how to build this project and etc, read this ",(0,r.kt)("a",{parentName:"p",href:"http://maven.apache.org/guides/introduction/introduction-to-the-pom.html"},"official POM guide"),"."),(0,r.kt)("h2",{id:"4-update-pom"},"4. Update POM"),(0,r.kt)("h3",{id:"41-add-compiler-properties-to-tell-maven-use-a-specified-jdk-version-to-compile-the-source-code"},"4.1 Add compiler properties to tell Maven use a specified JDK version to compile the source code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"    <properties>\n        \x3c!-- https://maven.apache.org/general.html#encoding-warning --\x3e\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        \n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n")),(0,r.kt)("h3",{id:"42-update-junit-to-412"},"4.2 Update jUnit to 4.12"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.12</version>\n        <scope>test</scope>\n    </dependency>\n")),(0,r.kt)("h3",{id:"43-add-commons-codec-for-sha-hashing"},"4.3 Add commons-codec for SHA hashing."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"    \x3c!-- Dependency for hashing --\x3e\n    \x3c!-- https://search.maven.org/artifact/commons-codec/commons-codec/1.11/jar --\x3e\n    <dependency>\n        <groupId>commons-codec</groupId>\n        <artifactId>commons-codec</artifactId>\n        <version>1.11</version>\n    </dependency>\n")),(0,r.kt)("h3",{id:"44-complete-updated-version"},"4.4 Complete updated version."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"pom.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<project xmlns="http://maven.apache.org/POM/4.0.0" \n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 \n         http://maven.apache.org/maven-v4_0_0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.mkyong.hashing</groupId>\n    <artifactId>java-project</artifactId>\n    <packaging>jar</packaging>\n    <version>1.0-SNAPSHOT</version>\n    <name>java-project</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>\n        \x3c!-- https://maven.apache.org/general.html#encoding-warning --\x3e\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>1.11</version>\n        </dependency>\n    </dependencies>\n\n</project>\n')),(0,r.kt)("h2",{id:"5-write-code"},"5. Write Code"),(0,r.kt)("h3",{id:"51-update-the-appjava-to-accept-an-input-and-hash-it-with-a-sha-256-algorithm"},"5.1 Update the App.java to accept an input and hash it with a SHA-256 algorithm."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"App.java")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.mkyong.hashing;\n\nimport org.apache.commons.codec.digest.DigestUtils;\n\npublic class App {\n\n    public static void main(String[] args) {\n\n        if (args.length < 1) {\n            System.err.println("Please provide an input!");\n            System.exit(0);\n        }\n        System.out.println(sha256hex(args[0]));\n\n    }\n\n    public static String sha256hex(String input) {\n        return DigestUtils.sha256Hex(input);\n    }\n\n}\n')),(0,r.kt)("h3",{id:"52-unit-test"},"5.2 Unit Test."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"AppTest.java")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.mkyong.hashing;\n\nimport org.junit.Assert;\nimport org.junit.Test;\n\npublic class AppTest {\n\n    private String INPUT = "123456";\n\n    @Test\n    public void testLength() {\n        Assert.assertEquals(64, App.sha256hex(INPUT).length());\n    }\n\n    @Test\n    public void testHex() {\n        String expected = "8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92";\n        Assert.assertEquals(expected, App.sha256hex(INPUT));\n    }\n\n}\n')),(0,r.kt)("p",null,"Done."),(0,r.kt)("h2",{id:"6-maven-build"},"6. Maven Build"),(0,r.kt)("h3",{id:"61-let-build-it-with-mvn-package"},"6.1 Let build it with ",(0,r.kt)("inlineCode",{parentName:"h3"},"mvn package")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>mvn package\n[INFO] Scanning for projects...\n[INFO]\n[INFO] ------------------< com.mkyong.hashing:java-project >-------------------\n[INFO] Building java-project 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n......\n\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning com.mkyong.hashing.AppTest\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec\n\nResults :\n\nTests run: 2, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ java-project ---\n[INFO] Building jar: D:\\java-project\\target\\java-project-1.0-SNAPSHOT.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 1.956 s\n[INFO] Finished at: 2018-09-28T12:40:18+08:00\n[INFO] ------------------------------------------------------------------------\n")),(0,r.kt)("p",null,"It compiles, run unit test and package the project into a ",(0,r.kt)("inlineCode",{parentName:"p"},"jar")," file and puts it into the ",(0,r.kt)("inlineCode",{parentName:"p"},"project/target")," folder."),(0,r.kt)("h2",{id:"7-run1"},"7. Run#1"),(0,r.kt)("h3",{id:"71-run-it-oops-by-default-maven-didnt-add-the-project-dependencies-commons-codec-into-the-jar-file"},"7.1 Run it. Oops\u2026 By default, Maven didn\u2019t add the project dependencies ",(0,r.kt)("inlineCode",{parentName:"h3"},"commons-codec")," into the jar file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'D:\\java-project>java -cp target/java-project-1.0-SNAPSHOT.jar com.mkyong.hashing.App 123456\n\nException in thread "main" java.lang.NoClassDefFoundError: org/apache/commons/codec/digest/DigestUtils\n        at com.mkyong.hashing.App.sha256hex(App.java:18)\n        at com.mkyong.hashing.App.main(App.java:13)\nCaused by: java.lang.ClassNotFoundException: org.apache.commons.codec.digest.DigestUtils\n        at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(Unknown Source)\n        at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(Unknown Source)\n        at java.base/java.lang.ClassLoader.loadClass(Unknown Source)\n        ... 2 more\n')),(0,r.kt)("h3",{id:"72-to-solve-it-we-can-use-this-maven-shade-plugin-to-create-an-uberfat-jar--group-everything-into-a-single-jar-file"},"7.2 To solve it, we can use this ",(0,r.kt)("inlineCode",{parentName:"h3"},"maven-shade-plugin")," to create an uber/fat-jar \u2013 group everything into a single jar file."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"pom.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"    <build>\n        <plugins>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.2.0</version>\n                <executions>\n                    \x3c!-- Attach the shade goal into the package phase --\x3e\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n        </plugins>\n    </build>\n")),(0,r.kt)("h3",{id:"73-package-it-again"},"7.3 Package it again!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>mvn clean package\n[INFO] Scanning for projects...\n[...\n\n[INFO] --- maven-shade-plugin:3.2.0:shade (default) @ java-project ---\n[INFO] Including commons-codec:commons-codec:jar:1.11 in the shaded jar.\n[INFO] Replacing original artifact with shaded artifact.\n\n[INFO] Replacing D:\\java-project\\target\\java-project-1.0-SNAPSHOT.jar \n    with D:\\java-project\\target\\java-project-1.0-SNAPSHOT-shaded.jar\n...\n")),(0,r.kt)("p",null,"Two jars will be generated, review the file size :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>dir target\n Volume in drive D is Samsung970\n Volume Serial Number is 10DF-E63D\n\n Directory of D:\\java-project\\target\n\n28/09/2018  12:57 PM           335,643 java-project-1.0-SNAPSHOT.jar\n28/09/2018  12:57 PM             3,053 original-java-project-1.0-SNAPSHOT.jar\n...\n")),(0,r.kt)("h2",{id:"8-run2"},"8. Run#2"),(0,r.kt)("h3",{id:"81-run-it-again-good-the-result-is-expected"},"8.1 Run it again. Good, the result is expected."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>java -cp target/java-project-1.0-SNAPSHOT.jar com.mkyong.hashing.App 123456\n8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\n")),(0,r.kt)("h3",{id:"82-can-we-run-it-as-jar-no-there-is-no-main-class"},"8.2 Can we run it as Jar? No, there is no main class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>java -jar target/java-project-1.0-SNAPSHOT.jar 123456\nno main manifest attribute, in target/java-project-1.0-SNAPSHOT.jar\n")),(0,r.kt)("h3",{id:"83-to-solve-it-add-the-main-class-in-maven-shade-plugin-like-this"},"8.3 To solve it, add the main class in maven-shade-plugin like this."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"pom.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-shade-plugin</artifactId>\n    <version>3.2.0</version>\n    <executions>\n        \x3c!-- Attach the shade into the package phase --\x3e\n        <execution>\n            <phase>package</phase>\n            <goals>\n                <goal>shade</goal>\n            </goals>\n            <configuration>\n                <transformers>\n                    <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">\n                        <mainClass>com.mkyong.hashing.App</mainClass>\n                    </transformer>\n                </transformers>\n            </configuration>\n        </execution>\n    </executions>\n</plugin>\n')),(0,r.kt)("h2",{id:"9-run3"},"9. Run#3"),(0,r.kt)("h3",{id:"91-package-it-again"},"9.1 Package it again!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>mvn clean package\n")),(0,r.kt)("h3",{id:"92-run-it-as-jar"},"9.2 Run it as Jar."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"D:\\java-project>java -jar target/java-project-1.0-SNAPSHOT.jar 123456\n8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92\n")),(0,r.kt)("p",null,"Done."),(0,r.kt)("h2",{id:"10-pom"},"10. POM"),(0,r.kt)("p",null,"Final POM file."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"pom.xml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<project xmlns="http://maven.apache.org/POM/4.0.0" \n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 \n         http://maven.apache.org/maven-v4_0_0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.mkyong.hashing</groupId>\n    <artifactId>java-project</artifactId>\n    <packaging>jar</packaging>\n    <version>1.0-SNAPSHOT</version>\n    <name>java-project</name>\n    <url>http://maven.apache.org</url>\n\n    <properties>\n        \x3c!-- https://maven.apache.org/general.html#encoding-warning --\x3e\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n            <version>1.11</version>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.2.0</version>\n                <executions>\n                    \x3c!-- Attach the shade into the package phase --\x3e\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n                            <transformers>\n                                <transformer\n                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">\n                                    <mainClass>com.mkyong.hashing.App</mainClass>\n                                </transformer>\n                            </transformers>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            \n        </plugins>\n    </build>\n</project>\n')))}d.isMDXComponent=!0}}]);