"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[80718],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return u}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),i=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return a.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),g=i(r),u=n,m=g["".concat(s,".").concat(u)]||g[u]||h[u]||l;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var i=2;i<l;i++)o[i]=r[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},24451:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return p},metadata:function(){return i},toc:function(){return h}});var a=r(87462),n=r(63366),l=(r(67294),r(3905)),o=["components"],p={title:"GraphQL \u9879\u76ee\u642d\u5efa",author:"Alan",author_title:"Maintainer of blog",author_url:"https://github.com/alanwei43",author_image_url:"https://github.com/alanwei43.png",tags:["javascript","graphql","typescript"],description:"GraphQL \u7b80\u4ecb, \u6700\u4f73\u5b9e\u8df5",draft:!1,hide_table_of_contents:!1},s=void 0,i={permalink:"/blog/2022/07/21/graphql-intro",editUrl:"https://github.com/alanwei43/blog/tree/master/src/blog/2022-07-21-graphql-intro.md",source:"@site/src/blog/2022-07-21-graphql-intro.md",title:"GraphQL \u9879\u76ee\u642d\u5efa",description:"GraphQL \u7b80\u4ecb, \u6700\u4f73\u5b9e\u8df5",date:"2022-07-21T00:00:00.000Z",formattedDate:"July 21, 2022",tags:[{label:"javascript",permalink:"/blog/tags/javascript"},{label:"graphql",permalink:"/blog/tags/graphql"},{label:"typescript",permalink:"/blog/tags/typescript"}],readingTime:4.64,truncated:!0,authors:[{name:"Alan",title:"Maintainer of blog",url:"https://github.com/alanwei43",imageURL:"https://github.com/alanwei43.png"}],frontMatter:{title:"GraphQL \u9879\u76ee\u642d\u5efa",author:"Alan",author_title:"Maintainer of blog",author_url:"https://github.com/alanwei43",author_image_url:"https://github.com/alanwei43.png",tags:["javascript","graphql","typescript"],description:"GraphQL \u7b80\u4ecb, \u6700\u4f73\u5b9e\u8df5",draft:!1,hide_table_of_contents:!1},nextItem:{title:"\u4e3a\u4ec0\u4e48try catch\u80fd\u6355\u6349await\u540epromise\u9519\u8bef\uff1f \u548c\u6267\u884c\u6808\u6709\u5173\u7cfb\u5417\uff1f",permalink:"/blog/2022/07/12/await-try-catch"}},c={authorsImageUrls:[void 0]},h=[{value:"Starter",id:"starter",level:2},{value:"Express + Apollo GraphQL",id:"express--apollo-graphql",level:3},{value:"Express + Yoga",id:"express--yoga",level:3},{value:"Merge Types and Resolvers",id:"merge-types-and-resolvers",level:2},{value:"Proxy",id:"proxy",level:2},{value:"Install",id:"install",level:3},{value:"Usage",id:"usage",level:3},{value:"Cache",id:"cache",level:2},{value:"References",id:"references",level:3},{value:"Network Request",id:"network-request",level:2},{value:"RESTDataSource",id:"restdatasource",level:3},{value:"DataLoader",id:"dataloader",level:3},{value:"Code generator",id:"code-generator",level:2}],g={toc:h};function u(e){var t=e.components,r=(0,n.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b Node GraphQL \u670d\u52a1\u5668\u7aef\u9879\u76ee\u7684\u5de5\u7a0b\u5316\u642d\u5efa."),(0,l.kt)("p",null,"\u9996\u5148\u5efa\u8bae\u4f7f\u7528express\u642d\u914d ",(0,l.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server"},"Apollo GraphQL")," \u4f7f\u7528, \u6216\u8005 express \u642d\u914d ",(0,l.kt)("a",{parentName:"p",href:"https://www.graphql-yoga.com/docs/integrations/integration-with-express"},"Yoga")," \u4f7f\u7528."),(0,l.kt)("p",null,"\u5e95\u5c42\u4f7f\u7528\u4e00\u4e2a\u73b0\u6210\u7684web\u6846\u67b6\u662f\u4e3a\u4e86\u65b9\u4fbf\u6269\u5c55, \u4f7f\u7528express, \u800c\u4e0d\u662fkoa\u6216\u8005fastify\u662f\u56e0\u4e3aexpress\u751f\u6001\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u597d\u4e00\u4e9b."),(0,l.kt)("h2",{id:"starter"},"Starter"),(0,l.kt)("h3",{id:"express--apollo-graphql"},"Express + Apollo GraphQL"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ref ",(0,l.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/integrations/middleware"},"Choosing an Apollo Server package"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5b89\u88c5\u4f9d\u8d56")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install apollo-server-express apollo-server-core express graphql\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u542f\u52a8\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="server.ts"',title:'"server.ts"'},"import { ApolloServer } from 'apollo-server-express';\nimport { ApolloServerPluginDrainHttpServer } from 'apollo-server-core';\nimport express from 'express';\nimport http from 'http';\n\nasync function startApolloServer(typeDefs, resolvers) {\n  // \u521b\u5efaexpres\u5b9e\u4f8b\n  const app = express();\n  // Our httpServer handles incoming requests to our Express app.\n  // Below, we tell Apollo Server to \"drain\" this httpServer,\n  // enabling our servers to shut down gracefully.\n  const httpServer = http.createServer(app);\n\n  // \u521d\u59cb\u5316 ApolloServer, \u5e76\u6dfb\u52a0 ApolloServerPluginDrainHttpServer \u63d2\u4ef6\n  // \u8be5\u63d2\u4ef6\u80fd\u8ba9\u4f60\u7684HTTP\u670d\u52a1\u5668\u4f18\u96c5\u5173\u95ed\n  const server = new ApolloServer({\n    typeDefs,\n    resolvers,\n    cache: 'bounded',\n    plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\n  });\n\n  // \u5fc5\u987b\u7b49\u5f85 Apollo Server\u542f\u52a8\u5b8c\u6210\u4e4b\u540e, \u518d\u6267\u884c server.applyMiddleware\n  await server.start();\n\n  // \u5728\u8fd9\u91cc\u53ef\u4ee5\u6302\u8f7d\u4e00\u4e9b\u4e2d\u95f4\u4ef6, \u6bd4\u5982\u8ba4\u8bc1\n  app.use('*', jwtCheck, requireAuth, checkScope);\n\n  server.applyMiddleware({\n    app,\n    // \u8bbe\u7f6e GraphQL \u76d1\u542c\u7684URL\u8def\u5f84\n    path: '/'\n  });\n\n  // Modified server startup\n  await new Promise<void>(resolve => httpServer.listen({ port: 4000 }, resolve));\n  console.log(`Server ready at http://localhost:4000/`);\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Apollo Server \u53ef\u4ee5\u5355\u72ec\u4f7f\u7528, \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5bf9\u5e94Web\u6846\u67b6\u7684\u96c6\u6210\u5305, ",(0,l.kt)("inlineCode",{parentName:"p"},"ApolloServer")," \u9700\u8981\u4ece\u5bf9\u5e94\u7684\u96c6\u6210\u5305\u91cc\u5bfc\u5165.")),(0,l.kt)("h3",{id:"express--yoga"},"Express + Yoga"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ref ",(0,l.kt)("a",{parentName:"p",href:"https://www.graphql-yoga.com/docs/integrations/integration-with-express"},"Integration with Express"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5b89\u88c5\u4f9d\u8d56")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install express graphql @graphql-yoga/node\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u542f\u52a8\u4ee3\u7801")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="server.ts"',title:'"server.ts"'},"import express from 'express';\nimport { createServer } from '@graphql-yoga/node';\n\nconst app = express();\n\nconst graphQLServer = createServer();\n\n// Bind GraphQL Yoga to `/graphql` endpoint\napp.use('/graphql', graphQLServer);\n\napp.listen(4000, () => {\n  console.log('Running a GraphQL API server at http://localhost:4000/graphql')\n});\n")),(0,l.kt)("h2",{id:"merge-types-and-resolvers"},"Merge Types and Resolvers"),(0,l.kt)("p",null,"\u968f\u7740\u9879\u76ee\u8d8a\u6765\u8d8a\u5927, \u5982\u679cGraphQL\u6587\u4ef6\u548c\u5bf9\u5e94\u7684Resolver\u90fd\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u4f1a\u53d8\u7684\u96be\u4ee5\u7ef4\u62a4, \u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("a",{parentName:"p",href:"https://www.graphql-tools.com/docs/schema-merging"},"@graphql-tools/merge")," \u7f13\u89e3\u8be5\u95ee\u9898:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/schema/index.ts"',title:'"src/schema/index.ts"'},'import { loadFilesSync } from "@graphql-tools/load-files";\nimport { mergeTypeDefs, mergeResolvers } from "@graphql-tools/merge";\nimport { ApolloServer } from \'apollo-server-express\';\n\n/**\n * \u8fd9\u91cc\u4f1a\u52a0\u8f7d\u5408\u5e76\u76ee\u5f55 src/schema \u53ca\u5176\u5b50\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6269\u5c55\u540d\u4e3a gql \u548c graphql \u7684GraphQL\u6587\u4ef6\n */ \nconst typeDefsArray = loadFilesSync("./schema/graphqls", {\n  recursive: true,\n  extensions: ["gql", "graphql"]\n});\n\n/**\n * \u8fd9\u91cc\u4f1a\u52a0\u8f7d ./schema/resolvers \u76ee\u5f55\u53ca\u5b50\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6269\u5c55\u540d\u4e3a ts \u548c js \u7684\u6587\u4ef6\u4f5c\u4e3a resolver\n * \u6269\u5c55\u540d\u5305\u542b ts \u662f\u4e3a\u4e86\u65b9\u4fbf\u672c\u5730\u5f00\u53d1, \u5b9e\u9645\u90e8\u7f72\u4e4b\u540e\u4e0d\u4f1a\u6709 ts \u6587\u4ef6\n * exportNames \u8868\u793a resolver \u6587\u4ef6\u9700\u8981\u5bfc\u51fa\u540d\u4e3a resolvers \u7684\u5bf9\u8c61\n */ \nconst resolversArray = loadFilesSync("./schema/resolvers", {\n  recursive: true,\n  extensions: ["ts", "js"],\n  ignoreIndex: false,\n  exportNames: ["resolvers"]\n});\n\nconst typeDefs = mergeTypeDefs(typeDefsArray);\nconst resolvers = mergeResolvers(resolversArray);\n\n/**\n * \u4e0b\u9762\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e0a\u9762\u52a0\u8f7d\u7684 typeDefs \u548c resolvers\n */ \nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  // ... \u5176\u4ed6\u9009\u9879\n});\n')),(0,l.kt)("p",null,"\u6216\u8005\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"@graphql-tools/schema")," \u5305\u91cc\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"makeExecutableSchema")," \u65b9\u6cd5\u5904\u7406\u4e4b\u540e\u518d\u4f20\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"p"},"ApolloServer"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/server.ts"',title:'"src/server.ts"'},'import { makeExecutableSchema } from "@graphql-tools/schema";\n\nconst server = new ApolloServer({\n  schema: makeExecutableSchema({\n    typeDefs: typeDefs,\n    resolvers: resolvers\n  }),\n  // ... \u5176\u4ed6\u9009\u9879\n});\n')),(0,l.kt)("h2",{id:"proxy"},"Proxy"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ref ",(0,l.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/proxy-configuration/"},"Proxy configuration"))),(0,l.kt)("p",null,"\u56e0\u4e3a\u6a21\u5757\u539f\u56e0\uff0c\u6bd4\u5982\u4fbf\u4e8e\u8c03\u8bd5\u67e5\u770b\u7f51\u7edc\u8bf7\u6c42, \u8bbf\u95ee\u53d7\u9650\u8d44\u6e90, \u9700\u8981\u914d\u7f6eNode\u5e94\u7528\u7684\u4ee3\u7406. "),(0,l.kt)("p",null,"\u867d\u7136 Apollo Server \u652f\u6301 Node.js \u6807\u51c6\u7684\u4ee3\u7406\u914d\u7f6e: ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/https.html#https_https_globalagent"},"https.globalAgent")," \u548c ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/api/http.html#http_http_globalagent"},"http.globalAgent"),", \u4f46\u662f\u5efa\u8bae\u4f7f\u7528 ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/gajus/global-agent#global-agent"},"global-agent")," \u5b9e\u73b0. ",(0,l.kt)("inlineCode",{parentName:"p"},"gobal-agent")," \u652f\u6301\u4f7f\u7528\u73af\u5883\u53d8\u91cf(",(0,l.kt)("inlineCode",{parentName:"p"},"HTTP_PROXY"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"NO_AGENT"),")\u8bbe\u7f6e\u4ee3\u7406(\u800cNode.js\u662f\u4e0d\u652f\u6301\u7684, \u800c\u4e14",(0,l.kt)("a",{parentName:"p",href:"https://github.com/nodejs/node/issues/15620"},"\u4e5f\u8bb8\u4ee5\u540e\u4e5f\u4e0d\u6253\u7b97\u652f\u6301"),".)."),(0,l.kt)("h3",{id:"install"},"Install"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install global-agent\n")),(0,l.kt)("h3",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"import { ApolloServer, gql } from 'apollo-server';\nimport { bootstrap } from 'global-agent';\n\n// \u8bbe\u7f6e\u4ee3\u7406\nbootstrap();\n\n// The following represents existing configuration, though its\n// important to bootstrap the agent before Apollo Server.\nconst server = new ApolloServer({\n  typesDefs,\n  resolvers,\n  cache: 'bounded',\n});\n")),(0,l.kt)("p",null,"\u7136\u540e\u542f\u52a8\u9879\u76ee\u65f6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf ",(0,l.kt)("inlineCode",{parentName:"p"},"GLOBAL_AGENT_HTTP_PROXY=http://localhost:3210")," \u5373\u53ef\u8bbe\u7f6e\u4ee3\u7406."),(0,l.kt)("h2",{id:"cache"},"Cache"),(0,l.kt)("h3",{id:"references"},"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.apollographql.com/blog/backend/caching/graphql-caching-the-elephant-in-the-room/"},"GraphQL & Caching: The Elephant in the Room")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.apollographql.com/blog/community/5-benefits-of-static-graphql-queries/"},"5 benefits of static GraphQL queries")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.apollographql.com/blog/announcement/platform/improve-graphql-performance-with-automatic-persisted-queries/"},"Improve GraphQL Performance with Automatic Persisted Queries")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/apollographql/persistgraphql"},"apollographql/persistgraphql")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.apollographql.com/blog/apollo-client/persisted-graphql-queries/"},"Persisted GraphQL Queries with Apollo Client")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://blog.logrocket.com/http-caching-graphql/"},"HTTP caching in GraphQL"))),(0,l.kt)("h2",{id:"network-request"},"Network Request"),(0,l.kt)("h3",{id:"restdatasource"},"RESTDataSource"),(0,l.kt)("h3",{id:"dataloader"},"DataLoader"),(0,l.kt)("h2",{id:"code-generator"},"Code generator"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"ref ",(0,l.kt)("a",{parentName:"p",href:"https://www.apollographql.com/blog/community/graphql-dx-d35bcf51c943/"},"An enhanced GraphQL developer experience with TypeScript"))))}u.isMDXComponent=!0}}]);