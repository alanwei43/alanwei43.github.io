"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[24469],{7493:n=>{n.exports=JSON.parse('{"permalink":"/blog/2024/12/15/docusaurus-use-tailwindcss","editUrl":"https://github.com/alanwei43/blog/tree/master/src/blog/2024/12-15-docusaurus-use-tailwindcss.md","source":"@site/src/blog/2024/12-15-docusaurus-use-tailwindcss.md","title":"\u5728 Docusaurus \u91cc\u4f7f\u7528 TailwindCSS","description":"ref Using TailwindCSS v3 in Docusaurus in 5 steps","date":"2024-12-15T00:00:00.000Z","tags":[{"inline":true,"label":"tailwindcss","permalink":"/blog/tags/tailwindcss"},{"inline":true,"label":"docusaurus","permalink":"/blog/tags/docusaurus"}],"readingTime":2.66,"hasTruncateMarker":true,"authors":[],"frontMatter":{"tags":["tailwindcss","docusaurus"]},"unlisted":false,"prevItem":{"title":"\u9875\u9762\u6574\u4f53\u989c\u8272\u5207\u6362","permalink":"/blog/2025/02/27/html-css-filter"},"nextItem":{"title":"CSS Position Sticky","permalink":"/blog/2024/12/14/css-position-sticky"}}')},16927:(n,s,e)=>{e.r(s),e.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>l});var t=e(7493),i=e(74848),r=e(28453);const o={tags:["tailwindcss","docusaurus"]},a="\u5728 Docusaurus \u91cc\u4f7f\u7528 TailwindCSS",c={authorsImageUrls:[]},l=[{value:"\u521b\u5efa Docusaurus \u9879\u76ee",id:"\u521b\u5efa-docusaurus-\u9879\u76ee",level:2},{value:"\u5b89\u88c5 TailwindCSS \u4f9d\u8d56",id:"\u5b89\u88c5-tailwindcss-\u4f9d\u8d56",level:2},{value:"\u8bbe\u7f6e\u63d2\u4ef6",id:"\u8bbe\u7f6e\u63d2\u4ef6",level:2},{value:"\u52a0\u8f7d TailwindCSS",id:"\u52a0\u8f7d-tailwindcss",level:2}];function u(n){const s={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:(0,i.jsx)(s.a,{href:"https://dev.to/shannonajclarke/using-tailwindcss-v3-in-docusaurus-in-5-steps-5c26",children:"ref Using TailwindCSS v3 in Docusaurus in 5 steps"})}),"\n",(0,i.jsx)(s.h2,{id:"\u521b\u5efa-docusaurus-\u9879\u76ee",children:"\u521b\u5efa Docusaurus \u9879\u76ee"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'echo "registry=https://registry.npmmirror.com" >> .npmrc\nnpm init -y\nnpm install -D create-docusaurus\nnpx create-docusaurus@latest hello-world classic --typescript\ncd hello-world\n'})}),"\n",(0,i.jsx)(s.h2,{id:"\u5b89\u88c5-tailwindcss-\u4f9d\u8d56",children:"\u5b89\u88c5 TailwindCSS \u4f9d\u8d56"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:"npm install tailwindcss postcss autoprefixer --save\nnpx tailwindcss init --ts # => \u4f1a\u751f\u6210\u4e00\u4e2a tailwind.config.ts \u6587\u4ef6\n"})}),"\n",(0,i.jsxs)(s.p,{children:["\u7f16\u8f91 ",(0,i.jsx)(s.code,{children:"tailwind.config.ts"}),":"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",children:"import type { Config } from 'tailwindcss'\n\nexport default {\n  content: [\"./src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n} satisfies Config\n\n\n"})}),"\n",(0,i.jsx)(s.h2,{id:"\u8bbe\u7f6e\u63d2\u4ef6",children:"\u8bbe\u7f6e\u63d2\u4ef6"}),"\n",(0,i.jsxs)(s.p,{children:["\u5728 ",(0,i.jsx)(s.code,{children:"docusaurus.config.ts"})," \u6587\u4ef6\u627e\u5230 ",(0,i.jsx)(s.code,{children:"plugin"})," \u914d\u7f6e\u9879,\u65b0\u589e\u4e00\u4e0b\u914d\u7f6e:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",metastring:'title="docusaurus.config.ts"',children:'import { themes as prismThemes } from \'prism-react-renderer\';\nimport type { Config } from \'@docusaurus/types\';\nimport type * as Preset from \'@docusaurus/preset-classic\';\n\n// This runs in Node.js - Don\'t use client-side code here (browser APIs, JSX...)\n\nconst editUrl = "edit url address";\n\nconst config: Config = {\n  // ... \u5176\u4ed6\u914d\u7f6e\n  plugins: [\n    // tailwindcss \u63d2\u4ef6\n    async function myPlugin(context, options) {\n      return {\n        name: "docusaurus-tailwindcss",\n        configurePostCss(postcssOptions) {\n          // Appends TailwindCSS and AutoPrefixer.\n          postcssOptions.plugins.push(require("tailwindcss"));\n          postcssOptions.plugins.push(require("autoprefixer"));\n          return postcssOptions;\n        },\n      };\n    },\n  ],\n};\n\nexport default config;\n'})}),"\n",(0,i.jsx)(s.p,{children:"\u76f8\u5bf9\u5b8c\u6574\u7684\u914d\u7f6e\u5982\u4e0b:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-typescript",metastring:'title="docusaurus.config.ts"',children:"import { themes as prismThemes } from 'prism-react-renderer';\nimport type { Config } from '@docusaurus/types';\nimport type * as Preset from '@docusaurus/preset-classic';\n\n// This runs in Node.js - Don't use client-side code here (browser APIs, JSX...)\n\nconst editUrl = \"edit url address\";\n\nconst config: Config = {\n  title: '...',\n  tagline: '...',\n  url: '...',\n  onBrokenLinks: 'throw',\n  onBrokenMarkdownLinks: 'warn',\n  favicon: 'img/favicon.ico',\n  \n  // ... \u5176\u4ed6\u914d\u7f6e\n  presets: [\n    [\n      'classic',\n      {\n        docs: {\n          sidebarPath: './sidebars.ts',\n          // Please change this to your repo.\n          // Remove this to remove the \"edit this page\" links.\n          editUrl: editUrl,\n          showLastUpdateTime: true,\n          sidebarCollapsible: true\n        },\n        blog: {\n          showReadingTime: true,\n          feedOptions: {\n            type: ['rss', 'atom'],\n            xslt: true,\n          },\n          // Please change this to your repo.\n          // Remove this to remove the \"edit this page\" links.\n          editUrl: editUrl,\n          // Useful options to enforce blogging best practices\n          onInlineTags: \"ignore\", // 'ignore' | 'log' | 'warn' | 'throw'\n          onInlineAuthors: 'warn',\n          onUntruncatedBlogPosts: 'warn',\n\n          truncateMarker: /\x3c!--\\s*(truncate|splitor)\\s*--\x3e/,\n          blogSidebarCount: 20\n        },\n        theme: {\n          customCss: './src/css/custom.css',\n        },\n      } satisfies Preset.Options,\n    ],\n  ],\n\n  plugins: [\n    //  \u591a\u6587\u6863\u914d\u7f6e\n    ['@docusaurus/plugin-content-docs', {\n      id: 'front-end',\n      path: 'docs/front-end',\n      routeBasePath: 'wiki/front-end',\n      sidebarPath: require.resolve('./docs/sidebars.FrondEnd.js'),\n      editUrl: editUrl,\n      showLastUpdateTime: true,\n      sidebarCollapsible: true\n    }],\n    ['@docusaurus/plugin-content-docs', {\n      id: 'back-end',\n      path: 'docs/back-end',\n      routeBasePath: 'wiki/back-end',\n      sidebarPath: require.resolve('./docs/sidebars.BackEnd.js'),\n      editUrl: editUrl,\n      showLastUpdateTime: true,\n      sidebarCollapsible: true\n    }],\n    // tailwindcss \u63d2\u4ef6\n    async function myPlugin(context, options) {\n      return {\n        name: \"docusaurus-tailwindcss\",\n        configurePostCss(postcssOptions) {\n          // Appends TailwindCSS and AutoPrefixer.\n          postcssOptions.plugins.push(require(\"tailwindcss\"));\n          postcssOptions.plugins.push(require(\"autoprefixer\"));\n          return postcssOptions;\n        },\n      };\n    },\n  ],\n  themes: [\n  // \u641c\u7d22\n    [\n      require.resolve(\"@easyops-cn/docusaurus-search-local\"),\n      /** @type {import(\"@easyops-cn/docusaurus-search-local\").PluginOptions} */\n      ({\n         // `hashed` is recommended as long-term-cache of index file is possible.\n         hashed: true,\n         // For Docs using Chinese, The `language` is recommended to set to:\n         language: [\"en\", \"zh\"],\n         indexPages: true,\n         // docsRouteBasePath: [\"/docs\", \"\"],\n         docsDir: [\"docs\"]\n      }),\n    ],\n  ],\n};\n\nexport default config;\n"})}),"\n",(0,i.jsx)(s.h2,{id:"\u52a0\u8f7d-tailwindcss",children:"\u52a0\u8f7d TailwindCSS"}),"\n",(0,i.jsxs)(s.p,{children:["\u4fee\u6539\u6587\u4ef6 ",(0,i.jsx)(s.code,{children:"src/css/custom.css"}),", \u5728\u6587\u4ef6\u9876\u90e8\u589e\u52a0\u4ee5\u4e0b\u4ee3\u7801:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-css",metastring:'title="src/css/custom.css"',children:"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n"})})]})}function d(n={}){const{wrapper:s}={...(0,r.R)(),...n.components};return s?(0,i.jsx)(s,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},28453:(n,s,e)=>{e.d(s,{R:()=>o,x:()=>a});var t=e(96540);const i={},r=t.createContext(i);function o(n){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(s):{...s,...n}}),[s,n])}function a(n){let s;return s=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:o(n.components),t.createElement(r.Provider,{value:s},n.children)}}}]);