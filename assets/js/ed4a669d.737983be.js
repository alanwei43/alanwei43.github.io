"use strict";(self.webpackChunkalan_blog=self.webpackChunkalan_blog||[]).push([[90237],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=l,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(g,i(i({ref:t},s),{},{components:n})):a.createElement(g,i({ref:t},s))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58059:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(87462),l=(n(67294),n(3905));const r={title:"\u5e38\u7528Git\u547d\u4ee4",sidebar_label:"Git",tags:["git"]},i=void 0,o={unversionedId:"collections/git",id:"collections/git",title:"\u5e38\u7528Git\u547d\u4ee4",description:"\u5e38\u7528\u6280\u5de7",source:"@site/src/docs/built-in/collections/git.md",sourceDirName:"collections",slug:"/collections/git",permalink:"/docs/built-in/collections/git",draft:!1,editUrl:"https://github.com/alanwei43/blog/tree/master/src/docs/built-in/collections/git.md",tags:[{label:"git",permalink:"/docs/built-in/tags/git"}],version:"current",frontMatter:{title:"\u5e38\u7528Git\u547d\u4ee4",sidebar_label:"Git",tags:["git"]},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/built-in/collections/docker"},next:{title:"Docusaurus",permalink:"/docs/built-in/docusaurus/"}},c={},p=[{value:"\u5e38\u7528\u6280\u5de7",id:"\u5e38\u7528\u6280\u5de7",level:2},{value:"\u514b\u9686\u6307\u5b9a\u5206\u652f",id:"\u514b\u9686\u6307\u5b9a\u5206\u652f",level:3},{value:"\u67e5\u770b\u6587\u4ef6\u533a\u522b",id:"\u67e5\u770b\u6587\u4ef6\u533a\u522b",level:3},{value:"\u7f13\u5b58\u8ba4\u8bc1\u6570\u636e",id:"\u7f13\u5b58\u8ba4\u8bc1\u6570\u636e",level:3},{value:"\u914d\u7f6e\u7f16\u8f91\u5668",id:"\u914d\u7f6e\u7f16\u8f91\u5668",level:3},{value:"\u6807\u7b7e",id:"\u6807\u7b7e",level:3},{value:"\u5220\u9664\u5206\u652f",id:"\u5220\u9664\u5206\u652f",level:3},{value:"\u53d6\u6d88 git reset \u64cd\u4f5c",id:"\u53d6\u6d88-git-reset-\u64cd\u4f5c",level:3},{value:"\u63a8\u9001\u672c\u5730\u5206\u652f",id:"\u63a8\u9001\u672c\u5730\u5206\u652f",level:3}],s={toc:p};function d(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u5e38\u7528\u6280\u5de7"},"\u5e38\u7528\u6280\u5de7"),(0,l.kt)("h3",{id:"\u514b\u9686\u6307\u5b9a\u5206\u652f"},"\u514b\u9686\u6307\u5b9a\u5206\u652f"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/1778088/how-do-i-clone-a-single-branch-in-git"},"How do I clone a single branch in Git?")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"# clone only the remote primary HEAD (default: origin/master)\ngit clone <url> --single-branch\n\n# as in:\ngit clone <url> --branch <branch> --single-branch [<folder>]\n")),(0,l.kt)("h3",{id:"\u67e5\u770b\u6587\u4ef6\u533a\u522b"},"\u67e5\u770b\u6587\u4ef6\u533a\u522b"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"git diff <previous_commit_hash>..<newer_commit_hash> -- {file_path}")," \u7528\u4e8e\u67e5\u770b\u6307\u5b9a\u6587\u4ef6\u4e24\u4e2a\u4e0d\u540ccommit\u4e4b\u95f4\u7684\u533a\u522b, \u6bd4\u5982: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff 9a422584b66686b11c20ce330aeb84f47e1c0b9b..e5f766ac6899f191a2fd53c9247f1ee9264886e0 -- src/some_file.js \n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/3368590/show-diff-between-commits"},"\u539f\u6587 - Show diff between commits")),(0,l.kt)("p",null,"Try"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff k73ud^..dj374\n")),(0,l.kt)("p",null,"to make sure to include all changes of k73ud in the resulting diff."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"git diff")," compares two endpoints (",(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/7256391/6309"},"instead of a commit range"),"). Since the OP want to see the changes introduced by ",(0,l.kt)("inlineCode",{parentName:"p"},"k73ud"),", he/she needs to difference between ",(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/1956054/6309"},"the first parent commit of k73ud:  k73ud^")," (or ",(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/2222920/6309"},"k73ud^1 or k73ud~")," )."),(0,l.kt)("p",null,"That way, the diff results will include changes since k73ud parent (meaning including changes from k73ud itself), instead of changes introduced since k73ud (up to dj374)."),(0,l.kt)("p",null,"Also you can try:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff oldCommit..newCommit\ngit diff k73ud..dj374 \n")),(0,l.kt)("p",null,"and (1 space, not more):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff oldCommit newCommit\ngit diff k73ud dj374\n")),(0,l.kt)("p",null,"And if you need to get only files names (e.g. to copy hotfix them manually):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff k73ud dj374 --name-only\n")),(0,l.kt)("p",null,"And you can get changes applied to another branch:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git diff k73ud dj374 > my.patch\ngit apply my.patch\n")),(0,l.kt)("h3",{id:"\u7f13\u5b58\u8ba4\u8bc1\u6570\u636e"},"\u7f13\u5b58\u8ba4\u8bc1\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git config --global credential.helper cache # \u8bbe\u7f6ecredential\u5b58\u50a8\u5728\u5185\u5b58\u4e2d, \u9ed8\u8ba4\u662f \u201c900\u201d\uff0c\u4e5f\u5c31\u662f 15 \u5206\u949f\ngit config --global credential.helper store --file ~/.my-credentials # \u8bbe\u7f6ecredential\u5b58\u50a8\u5728\u6307\u5b9a\u6587\u4ef6\n")),(0,l.kt)("p",null,"\u914d\u7f6e\u6587\u4ef6\u65b9\u5f0f, \u8bbe\u7f6ecredential\u5b58\u50a8\u5728\u5185\u5b58\u4e2d, \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-config"},"[credential]\n  helper = cache --timeout 3600\n")),(0,l.kt)("h3",{id:"\u914d\u7f6e\u7f16\u8f91\u5668"},"\u914d\u7f6e\u7f16\u8f91\u5668"),(0,l.kt)("p",null,"\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u6307\u5b9a\u9ed8\u8ba4\u7f16\u8f91\u5668\u4e3a vim:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'git config --global core.editor "vim"\nexport GIT_EDITOR=vim\n')),(0,l.kt)("p",null,"\u6216\u8005\u7f16\u8f91\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528 sublime \u4f5c\u4e3a\u9ed8\u8ba4\u7f16\u8f91\u5668: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-config",metastring:'title="~/.gitconfig"',title:'"~/.gitconfig"'},"[core]\n    editor = 'subl' --wait\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"\u6ce8\u610f\u8981\u52a0\u4e0a ",(0,l.kt)("inlineCode",{parentName:"p"},"--wait")," ")),(0,l.kt)("p",null,"\u5176\u4ed6",(0,l.kt)("a",{parentName:"p",href:"https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config"},"\u7f16\u8f91\u5668\u914d\u7f6e"),"\u5982\u4e0b:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Editor"),(0,l.kt)("th",{parentName:"tr",align:null},"Config command"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Atom"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "atom --wait"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"emacs"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "emacs"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nano"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "nano -w"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"vim"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "vim"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Sublime Text (Mac/Linux)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "subl -n -w"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Sublime Text (Win, 32-bit install)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"git config --global core.editor \"'c:/program files (x86)/sublime text 3/sublimetext.exe' -w\""))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Sublime Text (Win, 64-bit install)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"git config --global core.editor \"'c:/program files/sublime text 3/sublimetext.exe' -w\""))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Textmate"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "mate -w"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Visual Studio Code"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'git config --global core.editor "code --wait"'))))),(0,l.kt)("h3",{id:"\u6807\u7b7e"},"\u6807\u7b7e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# ref: https://stackoverflow.com/questions/3404936/show-which-git-tag-you-are-on\n# \u663e\u793a\u5f53\u524d\u7684\u6807\u7b7e \ngit describe --tags\n\n# ref https://stackoverflow.com/questions/35979642/how-to-checkout-remote-git-tag\n# \u83b7\u53d6\u6240\u6709\u7684tag\ngit fetch --all --tags --prune\n\n# \u5207\u6362\u6807\u7b7e\ngit checkout tags/<tag_name> -b <branch_name>\n\n# list all tags\ngit tag\n\n# create tag\ngit tag -a v1.0 -m "Product release"\n\n# delete tag\ngit tag -d <tag_name>\n')),(0,l.kt)("h3",{id:"\u5220\u9664\u5206\u652f"},"\u5220\u9664\u5206\u652f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -d feature/login # \u5220\u9664\u672c\u5730\u5206\u652f\ngit push origin --delete feature/login # \u5220\u9664\u8fdc\u7a0b\u5206\u652f\n")),(0,l.kt)("h3",{id:"\u53d6\u6d88-git-reset-\u64cd\u4f5c"},"\u53d6\u6d88 git reset \u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git reset 'HEAD@{1}'\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6765\u6e90 ",(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/2510276/how-to-undo-git-reset"},"How to undo 'git reset'?"))),(0,l.kt)("h3",{id:"\u63a8\u9001\u672c\u5730\u5206\u652f"},"\u63a8\u9001\u672c\u5730\u5206\u652f"),(0,l.kt)("p",null,"\u5c06\u672c\u5730\u7684\u5206\u652f\u63a8\u9001\u5230\u8fdc\u7a0b\u7684\u65b0\u5206\u652f\u4e0a(\u8fdc\u7a0b\u7684\u65b0\u5206\u652f\u4e0d\u5b58\u5728): "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin local_branch_name:remote_branch_name\n")))}d.isMDXComponent=!0}}]);