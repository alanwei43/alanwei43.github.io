"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[14663],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(96540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},29020:e=>{e.exports=JSON.parse('{"permalink":"/blog/2021/07/04/event-emitters-typescript","editUrl":"https://github.com/alanwei43/blog/tree/master/src/blog/2021/07/04-event-emitters-typescript.md","source":"@site/src/blog/2021/07/04-event-emitters-typescript.md","title":"Event Emitters in TypeScript","description":"Ref: Event Emitters in TypeScript","date":"2021-07-04T00:00:00.000Z","tags":[{"inline":true,"label":"typescript","permalink":"/blog/tags/typescript"},{"inline":true,"label":"javascript","permalink":"/blog/tags/javascript"}],"readingTime":1.5,"hasTruncateMarker":true,"authors":[{"name":"rjzaworski.com","title":"rjzaworski.com","url":"https://rjzaworski.com/2019/10/event-emitters-in-typescript","imageURL":"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4","key":null,"page":null}],"frontMatter":{"title":"Event Emitters in TypeScript","author":"rjzaworski.com","author_title":"rjzaworski.com","author_url":"https://rjzaworski.com/2019/10/event-emitters-in-typescript","author_image_url":"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4","tags":["typescript","javascript"],"draft":false,"hide_table_of_contents":false},"unlisted":false,"prevItem":{"title":"\u4fee\u6539\u706b\u72d0\u6d4f\u89c8\u5668\u5f00\u53d1\u8005\u5de5\u5177\u5b57\u4f53\u5927\u5c0f","permalink":"/blog/2021/08/10/mozilla-firefox-devtool-zoom"},"nextItem":{"title":"JavaScript\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u91cd\u590d\u5143\u7d20","permalink":"/blog/2021/06/27/javascript-create-an-array-with-repeat-element"}}')},59512:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var r=n(29020),i=n(74848),s=n(28453);const a={title:"Event Emitters in TypeScript",author:"rjzaworski.com",author_title:"rjzaworski.com",author_url:"https://rjzaworski.com/2019/10/event-emitters-in-typescript",author_image_url:"https://avatars.githubusercontent.com/u/2927578?s=460&u=153132e7aa3be8295a1703af9b759ca22338f557&v=4",tags:["typescript","javascript"],draft:!1,hide_table_of_contents:!1},o=void 0,c={authorsImageUrls:[void 0]},p=[];function l(e){const t={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://rjzaworski.com/2019/10/event-emitters-in-typescript#:~:text=A%20TypeScript%20event%20emitter%20interface%20TypeScript%20can%20help,but%20it%E2%80%99s%20easy%20enough%20to%20implement%20your%20own.",children:"Ref: Event Emitters in TypeScript"})}),"\n",(0,i.jsx)(t.p,{children:"\u4eceUI\u4ea4\u4e92\u5230Node.js\u7684\u6838\u5fc3\u4e8b\u4ef6\u5faa\u73af, \u57fa\u4e8e\u4e8b\u4ef6\u5faa\u73af\u662fJavaScript\u5f00\u53d1\u7684\u4e00\u90e8\u5206."}),"\n",(0,i.jsxs)(t.p,{children:["TypeScript\u53ef\u4ee5\u8ba9\u4e8b\u4ef6\u9a71\u52a8\u7684\u7a0b\u5e8f\u663e\u5f0f\u58f0\u660e\u4ec0\u4e48\u4e8b\u4ef6\u4f1a\u88ab\u89e6\u53d1\u3002\u6709\u5927\u91cf",(0,i.jsx)(t.a,{href:"https://rjzaworski.com/2018/10/typescript-event-handlers",children:"TypeScript event handlers"}),"\u793a\u4f8b\uff0c\u4e0d\u8fc7\u81ea\u5df1\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5b9e\u73b0\u4e00\u4e2a\u3002 \u5173\u952e\u70b9\u662f\u4f7f\u7528\u4e00\u4e2a\u5df2\u77e5\u7684\u4ec0\u4e48\u4e8b\u4ef6\u4f1a\u89e6\u53d1\u7684map\u4f5c\u4e3a",(0,i.jsx)(t.strong,{children:"Emitter"}),"\u3002"]}),"\n",(0,i.jsx)(t.p,{children:"\u901a\u5e38\u4e00\u4e2a event emitter \u7684TypeScript\u7c7b\u578b\u5b9a\u4e49\u770b\u8d77\u6765\u50cf\u8fd9\u6837:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"type EventMap = Record<string, any>;\n\ntype EventKey<T extends EventMap> = string & keyof T;\ntype EventReceiver<T> = (params: T) => void;\n\ninterface Emitter<T extends EventMap> {\n  on<K extends EventKey<T>>\n    (eventName: K, fn: EventReceiver<T[K]>): void;\n  off<K extends EventKey<T>>\n    (eventName: K, fn: EventReceiver<T[K]>): void;\n  emit<K extends EventKey<T>>\n    (eventName: K, params: T[K]): void;\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["\u63a5\u4e0b\u6765\u5199\u4e00\u4e2a\u5b9e\u73b0 ",(0,i.jsx)(t.strong,{children:"Emitter"})," \u7684\u5c0f\u4f8b\u5b50 ",(0,i.jsx)(t.strong,{children:"eventEmitter"})," :"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// `listeners` are unbounded -- don't use this in practice!\nfunction eventEmitter<T extends EventMap>(): Emitter<T> {\n  const listeners: {\n    [K in keyof EventMap]?: Array<(p: EventMap[K]) => void>;\n  } = {};\n\n  return {\n    on(key, fn) {\n      listeners[key] = (listeners[key] || []).concat(fn);\n    },\n    off(key, fn) {\n      listeners[key] = (listeners[key] || []).filter(f => f !== fn);\n    },\n    emit(key, data) {\n      (listeners[key] || []).forEach(function(fn) {\n        fn(data);\n      });\n    },\n  };\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["\u5f53\u6211\u4eec\u4f7f\u7528 ",(0,i.jsx)(t.strong,{children:"eventEmitter"})," \u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 emitter \u65f6\uff0c \u6211\u4eec\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2aemitter\u5c06\u4f1a\u89e6\u53d1\u7684\u4e8b\u4ef6\u5217\u8868:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"const emitter = eventEmitter<{\n  data: Buffer | string;\n  end: undefined;\n}>();\n"})})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);